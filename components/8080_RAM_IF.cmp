#
# This extracts code and data from RAM
# To use first flip bit 2 to trigger the read of
# the ROM into memory (then flip back)
# Flip bit 0 to turn on.
# Flip bit 1 to restart.
#
#
#8080_RAM=memory
8BIT_LATCH=code
8BIT_LATCH=add1
8BIT_LATCH=add2
8BIT_LATCH=data
16x2-1SELECT=sel0
8BUFFER=buffer
#
#
#
buffer:0 = INPUT:8
buffer:1 = INPUT:9
buffer:2 = INPUT:10
buffer:3 = INPUT:11
buffer:4 = INPUT:12
buffer:5 = INPUT:13
buffer:6 = INPUT:14
buffer:7 = INPUT:15
# This is the instruction for the memory to latch the data
#memory:0 = INPUT:0
# this is the data input to the memory
#memory:8 = INPUT:8
#memory:9 = INPUT:9
#memory:10 = INPUT:10
#memory:11 = INPUT:11
#memory:12 = INPUT:12
#memory:13 = INPUT:13
#memory:14 = INPUT:14
#memory:15 = INPUT:15

# This loads the ROM
#memory:1 = INPUT:6
# The instruction for the code latch to latch
code:0 = INPUT:1
# The instruction for the address1 latch to latch
add1:0 = INPUT:2
# The instruction for the address2 latch to latch
add2:0 = INPUT:3
# The instruction for the data to latch
data:0 = INPUT:4
#
code:1 = INPUT:6
add1:1 = INPUT:6
add2:1 = INPUT:6
data:1 = INPUT:6
# The instruction for the selector to take input from memory (0) or address latches (1)
sel0:31 = INPUT:5
#
# Instructs memory to write ram
#memory:2 = INPUT:7
# Address inputs to the selector from the counter 15 for now
sel0:0  =  INPUT:16
sel0:1  =  INPUT:17
sel0:2  =  INPUT:18
sel0:3  =  INPUT:19
sel0:4  =  INPUT:20
sel0:5  =  INPUT:21
sel0:6  =  INPUT:22
sel0:7  =  INPUT:23
sel0:8  =  INPUT:24
sel0:9  =  INPUT:25
sel0:10 =  INPUT:26
sel0:11 =  INPUT:27
sel0:12 =  INPUT:28
sel0:13 =  INPUT:29
sel0:14 =  INPUT:30
#
# Address latch inputs to the selector - 15 for now
sel0:16 = add1:0
sel0:17 = add1:1
sel0:18 = add1:2
sel0:19 = add1:3
sel0:20 = add1:4
sel0:21 = add1:5
sel0:22 = add1:6
sel0:23 = add1:7
#
sel0:24 = add2:0
sel0:25 = add2:1
sel0:26 = add2:2
sel0:27 = add2:3
sel0:28 = add2:4
sel0:29 = add2:5
sel0:30 = add2:6
#
# ram inputs from selectora
#
#memory:16 = sel0:0
#memory:17 = sel0:1
#memory:18 = sel0:2
#memory:19 = sel0:3
#memory:20 = sel0:4
#memory:21 = sel0:5
#memory:22 = sel0:6
#memory:23 = sel0:7
#memory:24 = sel0:8
#memory:25 = sel0:9
#memory:26 = sel0:10
#memory:27 = sel0:11
#memory:28 = sel0:12
#memory:29 = sel0:13
#memory:30 = sel0:14
#
# ram inputs to the code latch
code:8 = INPUT:8
code:9 = INPUT:9
code:10 = INPUT:10
code:11 = INPUT:11
code:12 = INPUT:12
code:13 = INPUT:13
code:14 = INPUT:14
code:15 = INPUT:15
#
# ram inputs to the address latches
#
add1:8 = INPUT:8
add1:9 = INPUT:9
add1:10 = INPUT:10
add1:11 = INPUT:11
add1:12 = INPUT:12
add1:13 = INPUT:13
add1:14 = INPUT:14
add1:15 = INPUT:15
#
add2:8 = INPUT:8
add2:9 = INPUT:9
add2:10 = INPUT:10
add2:11 = INPUT:11
add2:12 = INPUT:12
add2:13 = INPUT:13
add2:14 = INPUT:14
add2:15 = INPUT:15
#
# ram inputs to the data latch
#
data:8 = INPUT:8
data:9 = INPUT:9
data:10 = INPUT:10
data:11 = INPUT:11
data:12 = INPUT:12
data:13 = INPUT:13
data:14 = INPUT:14
data:15 = INPUT:15
#
# Outputs
#
#
# ++++++++++++++++++++++++++++++
# Outputs 0-7 contains the code byte
# ++++++++++++++++++++++++++++++
#
OUTPUT:0 = code:0
OUTPUT:1 = code:1
OUTPUT:2 = code:2
OUTPUT:3 = code:3
OUTPUT:4 = code:4
OUTPUT:5 = code:5
OUTPUT:6 = code:6
OUTPUT:7 = code:7
#
# ++++++++++++++++++++++++++++++
# Output 8-15 contains the data
# word when available
# ++++++++++++++++++++++++++++++
#
OUTPUT:8  = add1:0
OUTPUT:9  = add1:1
OUTPUT:10 = add1:2
OUTPUT:11 = add1:3
OUTPUT:12 = add1:4
OUTPUT:13 = add1:5
OUTPUT:14 = add1:6
OUTPUT:15 = add1:7
#
# ++++++++++++++++++++++++++++++
# Output 16-23 contains the first 
# address when available
# ++++++++++++++++++++++++++++++
#
OUTPUT:16 = add2:0
OUTPUT:17 = add2:1
OUTPUT:18 = add2:2
OUTPUT:19 = add2:3
OUTPUT:20 = add2:4
OUTPUT:21 = add2:5
OUTPUT:22 = add2:6
OUTPUT:23 = add2:7

# +++++++++++++++++++++++++++++++
# Output 24-31 are the data bits
#
# ++++++++++++++++++++++++++++++++
#OUTPUT:24 = data:0
#OUTPUT:25 = data:1
#OUTPUT:26 = data:2
#OUTPUT:27 = data:3
#OUTPUT:28 = data:4
#OUTPUT:29 = data:5
#OUTPUT:30 = data:6
#OUTPUT:31 = data:7
OUTPUT:24 = buffer:0
OUTPUT:25 = buffer:1
OUTPUT:26 = buffer:2
OUTPUT:27 = buffer:3
OUTPUT:28 = buffer:4
OUTPUT:29 = buffer:5
OUTPUT:30 = buffer:6
OUTPUT:31 = buffer:7
#
OUTPUT:32 = sel0:0
OUTPUT:33 = sel0:1
OUTPUT:34 = sel0:2
OUTPUT:35 = sel0:3
OUTPUT:36 = sel0:4
OUTPUT:37 = sel0:5
OUTPUT:38 = sel0:6
OUTPUT:39 = sel0:7
OUTPUT:40 = sel0:8
OUTPUT:41 = sel0:9
OUTPUT:42 = sel0:10
OUTPUT:43 = sel0:11
OUTPUT:44 = sel0:12
OUTPUT:45 = sel0:13
OUTPUT:46 = sel0:14
#
#
#
#
